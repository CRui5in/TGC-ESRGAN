# 一般配置
name: train_TGSR_x4
model_type: TGSRModel
scale: 4 
num_gpu: auto  # 自动检测GPU数量，设置为1则只使用单GPU
manual_seed: 42
use_amp: true  # 使用混合精度训练以节省显存
use_ddp: true
find_unused_parameters: true  # 添加此参数以解决分布式训练中未使用参数的问题
gpu_ids: [0, 1, 2]
multiprocessing_start_method: spawn  # 添加多进程启动方法设置

# 数据集配置
datasets:
  train:
    name: TGSR_Dataset
    type: TGSRDataset
    dataroot_gt: /root/autodl-tmp/tgsr_dataset_hr_only/train/hr  # 新的HR图像路径
    text_file: /root/autodl-tmp/tgsr_dataset_hr_only/train_captions.json  # 新的元数据文件
    io_backend:
      type: disk  # 使用字典格式指定io_backend
    
    # 数据处理配置
    phase: train
    use_original_size: true  # 使用原始图像尺寸，不进行随机裁剪
    use_hflip: true  # 水平翻转增强
    use_rot: false  # 旋转增强
    use_shuffle: true  # 添加数据打乱设置
    
    # RealESRGAN退化配置 - 与Real-ESRGAN保持一致
    blur_kernel_size: 21  # 恢复到21
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1  # 恢复到0.1
    blur_sigma: [0.2, 3.0]  # 恢复到3.0
    betag_range: [0.5, 4.0]  # 恢复到4.0
    betap_range: [1, 2.0]  # 恢复到2.0
    
    # 第二次退化配置 - 与Real-ESRGAN保持一致
    blur_kernel_size2: 21  # 恢复到21
    kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1  # 恢复到0.1
    blur_sigma2: [0.2, 1.5]  # 恢复到1.5
    betag_range2: [0.5, 4.0]  # 恢复到4.0
    betap_range2: [1, 2.0]  # 恢复到2.0
    
    # 最终sinc滤波器
    final_sinc_prob: 0.8  # 恢复到0.8
    
    # 噪声配置 - 与Real-ESRGAN保持一致
    gaussian_noise_prob: 0.5  # 恢复到0.5
    noise_range: [1, 30]  # 恢复到30
    poisson_scale_range: [0.05, 3.0]  # 恢复到3.0
    gray_noise_prob: 0.4  # 恢复到0.4
    gaussian_noise_prob2: 0.5  # 恢复到0.5
    noise_range2: [1, 25]  # 恢复到25
    poisson_scale_range2: [0.05, 2.5]  # 恢复到2.5
    gray_noise_prob2: 0.4  # 恢复到0.4
    
    # JPEG压缩配置 - 与Real-ESRGAN保持一致
    jpeg_range: [30, 95]  # 恢复到30
    jpeg_range2: [30, 95]  # 恢复到30
    
    # 调整大小配置
    resize_prob: [0.2, 0.7, 0.1]  # 上采样，下采样，保持不变的概率
    resize_range: [0.15, 1.5]
    resize_prob2: [0.3, 0.4, 0.3]
    resize_range2: [0.3, 1.2]
    second_blur_prob: 0.8
    
    # USM锐化配置
    usm_sharpen: true
    l1_gt_usm: true
    percep_gt_usm: true
    gan_gt_usm: false
    
    # 数据加载配置
    num_worker_per_gpu: 4  # worker数量
    batch_size_per_gpu: 2  # batch size
    dataset_enlarge_ratio: 5  # 每个epoch重复使用数据集的次数

  val:
    name: TGSR_Val
    type: TGSRDataset
    dataroot_gt: /root/autodl-tmp/tgsr_dataset_hr_only/val/hr
    text_file: /root/autodl-tmp/tgsr_dataset_hr_only/val_captions.json
    io_backend:
      type: disk  # 使用字典格式指定io_backend
    phase: val
    use_original_size: true
    use_hflip: false
    use_rot: false
    num_worker_per_gpu: 2  # worker数量
    batch_size_per_gpu: 1  # batch size

  test:
    name: TGSR_Test
    type: TGSRDataset
    dataroot_gt: /root/autodl-tmp/tgsr_dataset_hr_only/test/hr
    text_file: /root/autodl-tmp/tgsr_dataset_hr_only/test_captions.json
    io_backend:
      type: disk  # 使用字典格式指定io_backend
    phase: test
    use_original_size: true
    use_hflip: false
    use_rot: false
    num_worker_per_gpu: 2  # worker数量
    batch_size_per_gpu: 1  # batch size

# 网络配置
network_g:
  type: TGSRNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  scale: 4
  use_text_features: true
  text_dim: 512
  num_heads: 8

# 判别器网络配置
network_d:
  type: Discriminator
  num_in_ch: 3
  num_feat: 64
  num_block: 23

# 文本编码器配置
text_encoder:
  name: /root/autodl-tmp/clip-vit-base-patch32
  text_dim: 512
  freeze: true
  save_with_model: false

# 路径配置
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~
  experiments_root: /root/autodl-tmp/TGSR/experiments
  log: /root/autodl-tmp/TGSR/logs
  
# 训练配置
train:
  # 像素损失（L1 损失）
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  
  # 感知损失
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1.0
      'conv4_4': 1.0
      'conv5_4': 1.0
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: 1.0
    style_weight: 0.0
    range_norm: false
    criterion: l1
  
  # 对抗损失（GAN）
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-3
  
  # 生成器优化器配置
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]
    
  # 判别器优化器配置
  optim_d:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  
  # 学习率调度器
  scheduler:
    type: CosineAnnealingRestartLR
    periods: [250000, 250000, 250000, 250000]
    restart_weights: [1, 1, 1, 1]
    eta_min: !!float 1e-7
  
  # 重要的训练配置
  total_iter: 1000000
  warmup_iter: -1
  
  # 混合精度训练
  fp16: true
  
  # EMA配置
  use_ema: true
  ema_start: 5000
  
  # 内存优化配置
  memory_efficient: true
  
  # GAN训练配置
  gan_start_iter: 10000

# 验证配置
val:
  val_freq: 10000
  save_img: true
  save_visualization: false
  use_original_size: true
  max_val_samples: 100
  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true

# 测试配置
test:
  test_freq: 50000
  max_test_samples: 500
  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true

# 日志配置
logger:
  print_freq: 100
  save_checkpoint_freq: 50000
  use_tb_logger: true
  save_training_image_freq: 1000
  tb_log_freq: 20
  wandb: null

# 分布式训练配置
dist_params:
  backend: nccl
  port: 29500
  local_rank: 0
  launcher: pytorch
  rank: 0
  world_size: 1  # 会在运行时自动更新 